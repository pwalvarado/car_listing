<%= form_tag(listings_url, method: "get", class: "search") do %>
<table>
  <tr>
    <td>
  <%= label_tag :year_from, "Year:" %>
  <%= select_tag(:year_from,
                  options_for_select((1930..Time.now.year).to_a.reverse, 
                                      params[:search][:year_from]), 
                  prompt: "from", name: "search[year_from]") %>▰  
  <%= select_tag(:year_to,
                  options_for_select((1930..Time.now.year).to_a.reverse,
                                      params[:search][:year_to]), 
                  prompt: "to", name: "search[year_to]") %>
    </td>
  </tr>
  <tr>
    <td>
  <%= select_tag(:make_id, 
                  options_for_select(@makes_array, 
                                     params[:search][:make_id]), 
                  prompt: "Make ▾", name: "search[make_id]") %>
    </td>
  </tr>
  <tr>
    <td>
  <%= select_tag(:model_id, 
                  options_for_select(@models_array, 
                                     params[:search][:model_id]),
                  prompt: "Model ▾", name: "search[model_id]") %>
    </td>
  </tr>
  <tr>
    <td>
  <%= label_tag :price_from, "Price:" %>
      <input placeholder="from" 
                    type="text" 
                    name="search[price_from]"
                 pattern="[0-9]*"
                      id="price_from"
               maxlength="5"
                   value="<%= params[:search][:price_from] %>">▰ 
      <input placeholder="to"
                    type="text" 
                    name="search[price_to]" 
                 pattern="[0-9]*"
                      id="price_to"
               maxlength="6"
                   value="<%= params[:search][:price_to] %>">
    </td>
  </tr>
  <tr>
    <td>
      <%= label_tag :search_distance, "Within" %>
      <input placeholder="any" 
                    type="text" 
                    name="search[dist]"
                 pattern="[0-9]*"
                      id="search_distance"
               maxlength="4"
                   value="<%= params[:search][:dist] %>">
      <%= label_tag :search_distance, "miles" %><br>
      <%= label_tag :search_zip, "from" %> 
      <input placeholder="zip"
                    type="text" 
                    name="search[zip]" 
                 pattern="[0-9]*"
                      id="search_zip"
               maxlength="5"
                   value="<%= params[:search][:zip] %>">
    </td>
  </tr>
  <tr>
    <td>
      <%= label_tag :sort_by %>
      <%= select_tag(:sort_by, 
                      options_for_select(@sort_options,
                                         params[:search][:sort]),
                      prompt: "▾", name: "search[sort]") %>
      </select>
    </td>
  </tr>
  <tr>
    <td>
  <%= submit_tag "Search" %>
    </td>
  </tr>
</table>
<% end %>

<script>

var disableNewerThanYearFrom = function () {
  var yearFrom = parseInt($("#year_from").val());
  var options = $("#year_to").children("option")
  options.each(function (i) {
    var option = $(options[i])
    if (option.val() < yearFrom) {
      option.prop("disabled", "true"); 
    } else if (isNaN(yearFrom)) {
      option.removeAttr("disabled");
    }
  });
};

var disableOlderThanYearTo = function () {
  var yearTo = parseInt($("#year_to").val());
  var options = $("#year_from").children("option")
  options.each(function (i) {
    var option = $(options[i])
    if (option.val() > yearTo) {
     option.prop("disabled", "true"); 
    } else if (isNaN(yearTo)) {
      option.removeAttr("disabled");
    }
  });
};

var updateSortByDistance = function () {
  var distanceOption = $("select#sort_by").find("option[value='distance']")
  if ($("#search_zip").val().length === 5) {
    distanceOption.removeAttr("disabled");
  } else {
    distanceOption.prop("disabled", "true");
  }
};

$(document).ready(function () {
  disableNewerThanYearFrom();
  disableOlderThanYearTo();
  $("#year_from").on("change", disableNewerThanYearFrom)
  
  $("#year_to").on("change", disableOlderThanYearTo)
  
  
  var allModelsForSelect = $("#model_id").children("option");
  var updateModelSelect = function() {
    var currentMakeID = parseInt($("#make_id").val());
    if (isNaN(currentMakeID)) {
      $("#model_id").prop("disabled", "true");
    } else {
      $("#model_id").removeAttr("disabled");
      var nextMakeID = $("#make_id").find("option[value="+currentMakeID+"]").next().val();
      $("#model_id").empty();
    
      if (currentMakeID) {
        $("#model_id").prepend("<option value=''>Model ▾</option>")
      }
    
      allModelsForSelect.each(function (i) {
        var modelOption = $(allModelsForSelect[i])
        var modelID = parseInt(modelOption.val());
        if ((!currentMakeID || modelID > currentMakeID) && (!nextMakeID || modelID < nextMakeID)) {
          $("#model_id").append(modelOption)
        }
      });
    }
  };
    
  updateModelSelect();  
  $("#make_id").on("change", updateModelSelect);
  
  updateSortByDistance();
  $("#search_zip").on("change", updateSortByDistance);
});
</script>